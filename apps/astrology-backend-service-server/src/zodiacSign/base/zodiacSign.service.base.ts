/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ZodiacSign as PrismaZodiacSign } from "@prisma/client";

export class ZodiacSignServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ZodiacSignCountArgs, "select">
  ): Promise<number> {
    return this.prisma.zodiacSign.count(args);
  }

  async zodiacSigns<T extends Prisma.ZodiacSignFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ZodiacSignFindManyArgs>
  ): Promise<PrismaZodiacSign[]> {
    return this.prisma.zodiacSign.findMany<Prisma.ZodiacSignFindManyArgs>(args);
  }
  async zodiacSign<T extends Prisma.ZodiacSignFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ZodiacSignFindUniqueArgs>
  ): Promise<PrismaZodiacSign | null> {
    return this.prisma.zodiacSign.findUnique(args);
  }
  async createZodiacSign<T extends Prisma.ZodiacSignCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ZodiacSignCreateArgs>
  ): Promise<PrismaZodiacSign> {
    return this.prisma.zodiacSign.create<T>(args);
  }
  async updateZodiacSign<T extends Prisma.ZodiacSignUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ZodiacSignUpdateArgs>
  ): Promise<PrismaZodiacSign> {
    return this.prisma.zodiacSign.update<T>(args);
  }
  async deleteZodiacSign<T extends Prisma.ZodiacSignDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ZodiacSignDeleteArgs>
  ): Promise<PrismaZodiacSign> {
    return this.prisma.zodiacSign.delete(args);
  }
}
