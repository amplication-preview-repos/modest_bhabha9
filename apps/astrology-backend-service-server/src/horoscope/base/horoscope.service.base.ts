/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Horoscope as PrismaHoroscope } from "@prisma/client";

export class HoroscopeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HoroscopeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.horoscope.count(args);
  }

  async horoscopes<T extends Prisma.HoroscopeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.HoroscopeFindManyArgs>
  ): Promise<PrismaHoroscope[]> {
    return this.prisma.horoscope.findMany<Prisma.HoroscopeFindManyArgs>(args);
  }
  async horoscope<T extends Prisma.HoroscopeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.HoroscopeFindUniqueArgs>
  ): Promise<PrismaHoroscope | null> {
    return this.prisma.horoscope.findUnique(args);
  }
  async createHoroscope<T extends Prisma.HoroscopeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HoroscopeCreateArgs>
  ): Promise<PrismaHoroscope> {
    return this.prisma.horoscope.create<T>(args);
  }
  async updateHoroscope<T extends Prisma.HoroscopeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HoroscopeUpdateArgs>
  ): Promise<PrismaHoroscope> {
    return this.prisma.horoscope.update<T>(args);
  }
  async deleteHoroscope<T extends Prisma.HoroscopeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.HoroscopeDeleteArgs>
  ): Promise<PrismaHoroscope> {
    return this.prisma.horoscope.delete(args);
  }
}
